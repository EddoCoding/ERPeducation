<Window x:Class="ERPeducation.Common.Windows.WindowDirection.DirectionView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ERPeducation.Common.Windows.WindowDirection"
        xmlns:converters="clr-namespace:ERPeducation.Common.Converters"
        mc:Ignorable="d" Title="Направление" Height="415" Width="850">
    <Window.Resources>
        <converters:ComboBoxItemToStringConvert x:Key="ComboBoxItemToStringConvert"/>
        
        <Style x:Key="Label" TargetType="Label">
            <Setter Property="FontFamily" Value="Calibri"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="20,0,50,0"/>
        </Style>
        <Style x:Key="ComboBoxItem" TargetType="ComboBoxItem">
            <Setter Property="FontFamily" Value="Calibri"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Background="White">
                            <ContentPresenter Margin="3"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="DarkCyan"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboBoxLvl" TargetType="ComboBox">
            <Setter Property="Margin" Value="20,0,0,0"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <StackPanel>
                            <ToggleButton x:Name="togglebutton" Content="{Binding SelectedLvl}" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, 
                                    RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" MinWidth="130" Width="Auto" HorizontalAlignment="Left">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Grid>
                                            <Border x:Name="Border" Background="White" BorderThickness="1" BorderBrush="Gray" Height="25">
                                                <ContentPresenter VerticalAlignment="Center" Margin="5,0,25,0"/>
                                            </Border>
                                            <Path x:Name="Arrow" Fill="Gray" HorizontalAlignment="Right" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Margin="0,0,10,0"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Border" Property="Background" Value="WhiteSmoke"/>
                                                <Setter TargetName="Arrow" Property="Fill" Value="DarkCyan"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" 
                                   Focusable="True" PopupAnimation="Slide" Width="Auto">
                                <Border x:Name="DropDown" MinWidth="70" MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                                        SnapsToDevicePixels="True" BorderBrush="Gray" BorderThickness="1">
                                    <ScrollViewer SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboBoxDirection" TargetType="ComboBox">
            <Setter Property="Margin" Value="20,0,0,0"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <StackPanel>
                            <ToggleButton x:Name="togglebutton" Content="{Binding SelectedDirection}" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, 
                                    RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" MinWidth="160" Width="Auto" HorizontalAlignment="Left">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Grid>
                                            <Border x:Name="Border" Background="White" BorderThickness="1" BorderBrush="Gray" Height="25">
                                                <ContentPresenter VerticalAlignment="Center" Margin="5,0,25,0"/>
                                            </Border>
                                            <Path x:Name="Arrow" Fill="Gray" HorizontalAlignment="Right" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Margin="0,0,10,0"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Border" Property="Background" Value="WhiteSmoke"/>
                                                <Setter TargetName="Arrow" Property="Fill" Value="DarkCyan"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" 
                                   Focusable="True" PopupAnimation="Slide" Width="Auto">
                                <Border x:Name="DropDown" MinWidth="70" MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                                        SnapsToDevicePixels="True" BorderBrush="Gray" BorderThickness="1">
                                    <ScrollViewer SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboBoxForm" TargetType="ComboBox">
            <Setter Property="Margin" Value="20,0,0,0"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <StackPanel>
                            <ToggleButton x:Name="togglebutton" Content="{Binding SelectedForms}" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, 
                                    RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" MinWidth="120" Width="Auto" HorizontalAlignment="Left">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Grid>
                                            <Border x:Name="Border" Background="White" BorderThickness="1" BorderBrush="Gray" Height="25">
                                                <ContentPresenter VerticalAlignment="Center" Margin="5,0,25,0"/>
                                            </Border>
                                            <Path x:Name="Arrow" Fill="Gray" HorizontalAlignment="Right" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Margin="0,0,10,0"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Border" Property="Background" Value="WhiteSmoke"/>
                                                <Setter TargetName="Arrow" Property="Fill" Value="DarkCyan"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" 
                                   Focusable="True" PopupAnimation="Slide" Width="Auto">
                                <Border x:Name="DropDown" MinWidth="70" MaxHeight="{TemplateBinding MaxDropDownHeight}" 
                                        SnapsToDevicePixels="True" BorderBrush="Gray" BorderThickness="1">
                                    <ScrollViewer SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonCancel" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="Border" BorderBrush="Gray" BorderThickness="1" Background="{TemplateBinding Background}" Margin="0,10,10,10">
                            <ContentPresenter Margin="3"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="LightGray"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="LightGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonAdd" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="Border" BorderBrush="Gray" BorderThickness="1" Background="{TemplateBinding Background}" Margin="0,10,10,10">
                            <ContentPresenter Margin="3"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="DarkCyan"/>
                                <Setter Property="Foreground" Value="WhiteSmoke"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="DarkCyan"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonChange" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="5" BorderThickness="0" Background="{TemplateBinding Background}" Margin="10,0,0,0">
                            <Image Height="20" Width="20" Source="/Common/Image/change.png"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonDelete" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="5" BorderThickness="0" Background="{TemplateBinding Background}" Margin="10,0,0,0">
                            <Image Height="20" Width="20" Source="/Common/Image/delete.png"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListBoxItemTest" TargetType="ListBoxItem">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border BorderBrush="Gray" BorderThickness="0,0,0,1" Background="{TemplateBinding Background}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Column="0" Content="Предмет:" Margin="5" FontSize="12" Padding="0" FontWeight="Bold"/>
                                <TextBlock Grid.Column="1" Text="{Binding SelectedObject, StringFormat=''}" Margin="2,5,2,5" FontSize="12"/>

                                <Label Grid.Column="2" Content="Дата и время:" Margin="10,5,5,5" FontSize="12" Padding="0" FontWeight="Bold"/>
                                <TextBlock Grid.Column="3" Text="{Binding When, StringFormat='dd.MM.yyyy HH:mm'}" Margin="2,5,2,5" FontSize="12"/>

                                <Label Grid.Column="4" Content="Помещение:" Margin="10,5,5,5" FontSize="12" Padding="0" FontWeight="Bold"/>
                                <TextBlock Grid.Column="5" Text="{Binding Where}" Margin="2,5,2,5" FontSize="12"/>

                                <Label Grid.Column="6" Content="Специальные условия:" Margin="10,5,5,5" FontSize="12" Padding="0" FontWeight="Bold"/>
                                <CheckBox Grid.Column="7" IsChecked="{Binding SpecialConditions}" IsEnabled="False" Margin="2,5,2,5"/>

                                <Button Grid.Column="8" Style="{StaticResource ButtonChange}" Command="{Binding ChangeTestCommand}" 
                                        HorizontalAlignment="Right" ToolTip="Изменить испытание"/>
                                <Button Grid.Column="9" Style="{StaticResource ButtonDelete}" Command="{Binding DeleteTestCommand}" 
                                        HorizontalAlignment="Right" Margin="0,0,20,0" ToolTip="Удалить испытание"/>

                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="WhiteSmoke"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonAddTest" TargetType="Button">
            <Setter Property="FontFamily" Value="Calibri"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Margin" Value="0,10,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <ContentPresenter HorizontalAlignment="Left" Margin="15,0,0,0"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="DarkCyan"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <StackPanel Grid.Row="0">
            <Label Content="Уровень подготовки" Style="{StaticResource Label}"/>
            <ComboBox ItemsSource="{Binding LevelOfTraining}" SelectedItem="{Binding SelectedLvl, Converter={StaticResource ComboBoxItemToStringConvert}}"
              Style="{StaticResource ComboBoxLvl}" ItemContainerStyle="{StaticResource ComboBoxItem}"/>
        </StackPanel>

        <StackPanel Grid.Row="1">
            <Label Content="Направление подготовки" Style="{StaticResource Label}"/>
            <ComboBox  ItemsSource="{Binding DirectionOfTraining}" SelectedItem="{Binding SelectedDirection}"
               Style="{StaticResource ComboBoxDirection}" ItemContainerStyle="{StaticResource ComboBoxItem}"/>
        </StackPanel>

        <StackPanel Grid.Row="2">
            <Label Content="Форма подготовки" Style="{StaticResource Label}"/>
            <ComboBox ItemsSource="{Binding PreparationForm}" SelectedItem="{Binding SelectedForms}"
              Style="{StaticResource ComboBoxForm}" ItemContainerStyle="{StaticResource ComboBoxItem}"/>
        </StackPanel>

        <StackPanel Grid.Row="3" Orientation="Horizontal" Margin="0,5,0,0">
            <Button Content="+ Добавить испытание" Style="{StaticResource ButtonAddTest}" Command="{Binding AddTest}"/>
            <Button Content="Выбрать шаблон испытаний" Style="{StaticResource ButtonAddTest}" Command="{Binding SelectTemplateTest}"/>
        </StackPanel>

        <ListBox Grid.Row="4" Height="150" Margin="15,10,15,0" ItemsSource="{Binding Tests}" ItemContainerStyle="{StaticResource ListBoxItemTest}"/>

        <StackPanel Grid.Row="5" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom">
            <Button Content="Отменить" Style="{StaticResource ButtonCancel}" Command="{Binding CloseWindowCommand}"/>
            <Button Content="{Binding TextAddChange}" Style="{StaticResource ButtonAdd}" Command="{Binding AddDirectionCommand}"/>
        </StackPanel>
        
    </Grid>
    
</Window>
